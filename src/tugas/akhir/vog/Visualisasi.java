/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tugas.akhir.vog;

import java.awt.BorderLayout;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.graphstream.graph.Graph;
import org.graphstream.graph.implementations.MultiGraph;
import org.graphstream.graph.implementations.SingleGraph;
import org.graphstream.stream.file.FileSinkDGS;
import org.graphstream.stream.file.FileSourceDGS;
import org.graphstream.ui.swingViewer.View;
import org.graphstream.ui.swingViewer.Viewer;

/**
 *
 * @author satrio
 */
public class Visualisasi extends javax.swing.JFrame {

    /**
     * Creates new form Visualisasi
     */
    
    String styleSheet;
    Graph graph;
    
    public Visualisasi() {
        initComponents();
        
        // untuk styling visualisasi graph
        styleSheet = "node {"+
                            " fill-color: red;"+
                            " size: 10px;"+
                        "}"+
                    "edge {"+
                            " fill-color: blue;"+
                        "}";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        paneMain = new javax.swing.JPanel();
        paneGraphVis = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        paneVisualisasi = new javax.swing.JPanel();
        paneContainerQuery = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuItemLoadGraph = new javax.swing.JMenuItem();
        menuItemSaveGraph = new javax.swing.JMenuItem();
        menuItemExit = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        paneMain.setBackground(new java.awt.Color(1, 1, 1));

        javax.swing.GroupLayout paneVisualisasiLayout = new javax.swing.GroupLayout(paneVisualisasi);
        paneVisualisasi.setLayout(paneVisualisasiLayout);
        paneVisualisasiLayout.setHorizontalGroup(
            paneVisualisasiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 785, Short.MAX_VALUE)
        );
        paneVisualisasiLayout.setVerticalGroup(
            paneVisualisasiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 283, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Visualisasi", paneVisualisasi);

        javax.swing.GroupLayout paneGraphVisLayout = new javax.swing.GroupLayout(paneGraphVis);
        paneGraphVis.setLayout(paneGraphVisLayout);
        paneGraphVisLayout.setHorizontalGroup(
            paneGraphVisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneGraphVisLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        paneGraphVisLayout.setVerticalGroup(
            paneGraphVisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneGraphVisLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout paneContainerQueryLayout = new javax.swing.GroupLayout(paneContainerQuery);
        paneContainerQuery.setLayout(paneContainerQueryLayout);
        paneContainerQueryLayout.setHorizontalGroup(
            paneContainerQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        paneContainerQueryLayout.setVerticalGroup(
            paneContainerQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout paneMainLayout = new javax.swing.GroupLayout(paneMain);
        paneMain.setLayout(paneMainLayout);
        paneMainLayout.setHorizontalGroup(
            paneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paneGraphVis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(paneContainerQuery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        paneMainLayout.setVerticalGroup(
            paneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paneGraphVis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paneContainerQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        menuFile.setText("File");

        menuItemLoadGraph.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuItemLoadGraph.setText("Load Graph");
        menuItemLoadGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemLoadGraphActionPerformed(evt);
            }
        });
        menuFile.add(menuItemLoadGraph);

        menuItemSaveGraph.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuItemSaveGraph.setText("Save Graph");
        menuItemSaveGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSaveGraphActionPerformed(evt);
            }
        });
        menuFile.add(menuItemSaveGraph);

        menuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        menuItemExit.setText("Exit");
        menuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExitActionPerformed(evt);
            }
        });
        menuFile.add(menuItemExit);

        jMenuBar1.add(menuFile);

        menuEdit.setText("Edit");
        jMenuBar1.add(menuEdit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemLoadGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemLoadGraphActionPerformed
        
        // open file dialog untuk memilih graph database
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int rtn = fc.showOpenDialog(this);
        graph = new MultiGraph("Graph Stanford");
        if(rtn == JFileChooser.APPROVE_OPTION){
            
            String file = fc.getSelectedFile().getAbsolutePath();
            System.out.println(file);
            
            FileSourceDGS fdgs = new FileSourceDGS();
            fdgs.addSink(graph);
            
            try {
                // proses load data
                fdgs.readAll(file);
            } catch (IOException ex) {
                Logger.getLogger(Visualisasi.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                fdgs.removeSink(graph);
            }
            System.out.println("success load "+ file);
//            graph.display();
            
            // diplay graph to panel
            Viewer viewer = new Viewer(graph, Viewer.ThreadingModel.GRAPH_IN_ANOTHER_THREAD);
            View view = viewer.addDefaultView(false);
            viewer.enableAutoLayout();
            paneVisualisasi.setLayout(new BorderLayout());
            paneVisualisasi.add(view, BorderLayout.CENTER);
            paneVisualisasi.setVisible(true);
        }
        else {
            System.err.println("Load canceled !");
        }
        
    }//GEN-LAST:event_menuItemLoadGraphActionPerformed

    private void menuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExitActionPerformed
        // exit the apps
        System.exit(1);
    }//GEN-LAST:event_menuItemExitActionPerformed

    private void menuItemSaveGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSaveGraphActionPerformed
        
        // open save dialog to save the graph
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int rtn = fc.showSaveDialog(this);
        if(rtn == JFileChooser.APPROVE_OPTION){
            String file = fc.getSelectedFile().getAbsolutePath();
            try {
                // save current graph to dgs file
                FileSinkDGS fsdgs = new FileSinkDGS();
                fsdgs.writeAll(graph, file);
                System.out.println("success save "+ file);
            } catch (IOException ex) {
                Logger.getLogger(Visualisasi.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            System.err.println("Save canceled !");
        }
    }//GEN-LAST:event_menuItemSaveGraphActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Visualisasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Visualisasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Visualisasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Visualisasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Visualisasi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JMenuItem menuItemLoadGraph;
    private javax.swing.JMenuItem menuItemSaveGraph;
    private javax.swing.JPanel paneContainerQuery;
    private javax.swing.JPanel paneGraphVis;
    private javax.swing.JPanel paneMain;
    private javax.swing.JPanel paneVisualisasi;
    // End of variables declaration//GEN-END:variables
}
